/*
 * Fridge API
 *
 * OpenAPI 3.0.0 study - a fridge API
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"errors"
	"net/http"
)

// DefaultApiService is a service that implents the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService() DefaultApiServicer {
	return &DefaultApiService{}
}

// ProductsGet - 
func (s *DefaultApiService) ProductsGet(ctx context.Context, sort bool) (ImplResponse, error) {
	// TODO - update ProductsGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Product{}) or use other options such as http.Ok ...
	//return Response(200, []Product{}), nil

	// return Response(http.StatusNotImplemented, nil), errors.New("ProductsGet method not implemented")

	// NOTE: lines below created by hand
	p1 := Product{Name: "Milk", Quantity: 0.5}
	p2 := Product{Name: "SpringRolls", Quantity: 4}
	return Response(200,[]Product{p1,p2}), nil
}

// ProductsNameGet - 
func (s *DefaultApiService) ProductsNameGet(ctx context.Context, name string) (ImplResponse, error) {
	// TODO - update ProductsNameGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Product{}) or use other options such as http.Ok ...
	//return Response(200, Product{}), nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ProductsNameGet method not implemented")
}

// ProductsNamePut - 
func (s *DefaultApiService) ProductsNamePut(ctx context.Context, name string, inlineObject InlineObject) (ImplResponse, error) {
	// TODO - update ProductsNamePut with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ProductsNamePut method not implemented")
}

// ProductsPost - 
func (s *DefaultApiService) ProductsPost(ctx context.Context, product Product) (ImplResponse, error) {
	// TODO - update ProductsPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, {}) or use other options such as http.Ok ...
	//return Response(201, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ProductsPost method not implemented")
}

