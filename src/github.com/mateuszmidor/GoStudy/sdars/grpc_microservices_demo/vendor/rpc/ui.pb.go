// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ui.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Messages prefixed with UI so they dont collide with other same named but maybe different content messages in package rpc
type UIUpdateStationListRequest struct {
	Stations             []string `protobuf:"bytes,1,rep,name=stations,proto3" json:"stations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UIUpdateStationListRequest) Reset()         { *m = UIUpdateStationListRequest{} }
func (m *UIUpdateStationListRequest) String() string { return proto.CompactTextString(m) }
func (*UIUpdateStationListRequest) ProtoMessage()    {}
func (*UIUpdateStationListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_63867a62624c1283, []int{0}
}

func (m *UIUpdateStationListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UIUpdateStationListRequest.Unmarshal(m, b)
}
func (m *UIUpdateStationListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UIUpdateStationListRequest.Marshal(b, m, deterministic)
}
func (m *UIUpdateStationListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIUpdateStationListRequest.Merge(m, src)
}
func (m *UIUpdateStationListRequest) XXX_Size() int {
	return xxx_messageInfo_UIUpdateStationListRequest.Size(m)
}
func (m *UIUpdateStationListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UIUpdateStationListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UIUpdateStationListRequest proto.InternalMessageInfo

func (m *UIUpdateStationListRequest) GetStations() []string {
	if m != nil {
		return m.Stations
	}
	return nil
}

type UIUpdateSubscriptionRequest struct {
	Active               bool     `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UIUpdateSubscriptionRequest) Reset()         { *m = UIUpdateSubscriptionRequest{} }
func (m *UIUpdateSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*UIUpdateSubscriptionRequest) ProtoMessage()    {}
func (*UIUpdateSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_63867a62624c1283, []int{1}
}

func (m *UIUpdateSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UIUpdateSubscriptionRequest.Unmarshal(m, b)
}
func (m *UIUpdateSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UIUpdateSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *UIUpdateSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIUpdateSubscriptionRequest.Merge(m, src)
}
func (m *UIUpdateSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_UIUpdateSubscriptionRequest.Size(m)
}
func (m *UIUpdateSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UIUpdateSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UIUpdateSubscriptionRequest proto.InternalMessageInfo

func (m *UIUpdateSubscriptionRequest) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func init() {
	proto.RegisterType((*UIUpdateStationListRequest)(nil), "rpc.UIUpdateStationListRequest")
	proto.RegisterType((*UIUpdateSubscriptionRequest)(nil), "rpc.UIUpdateSubscriptionRequest")
}

func init() { proto.RegisterFile("ui.proto", fileDescriptor_63867a62624c1283) }

var fileDescriptor_63867a62624c1283 = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x28, 0xcd, 0xd4, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x2a, 0x48, 0x96, 0xe2, 0x49, 0xce, 0xcf, 0xcd, 0xcd,
	0xcf, 0x83, 0x08, 0x29, 0x59, 0x70, 0x49, 0x85, 0x7a, 0x86, 0x16, 0xa4, 0x24, 0x96, 0xa4, 0x06,
	0x97, 0x24, 0x96, 0x64, 0xe6, 0xe7, 0xf9, 0x64, 0x16, 0x97, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16,
	0x97, 0x08, 0x49, 0x71, 0x71, 0x14, 0x43, 0x44, 0x8b, 0x25, 0x18, 0x15, 0x98, 0x35, 0x38, 0x83,
	0xe0, 0x7c, 0x25, 0x53, 0x2e, 0x69, 0xb8, 0xce, 0xd2, 0xa4, 0xe2, 0xe4, 0xa2, 0xcc, 0x02, 0x90,
	0x04, 0x4c, 0xab, 0x18, 0x17, 0x5b, 0x62, 0x72, 0x49, 0x66, 0x59, 0xaa, 0x04, 0xa3, 0x02, 0xa3,
	0x06, 0x47, 0x10, 0x94, 0x67, 0x34, 0x85, 0x91, 0x8b, 0x29, 0xd4, 0x53, 0xc8, 0x95, 0x4b, 0x24,
	0xa8, 0x20, 0x19, 0xc3, 0x62, 0x21, 0x79, 0xbd, 0xa2, 0x82, 0x64, 0x3d, 0xdc, 0x4e, 0x92, 0xe2,
	0x02, 0x2b, 0x70, 0xcd, 0x2d, 0x28, 0xa9, 0x54, 0x62, 0x10, 0x72, 0xe7, 0x12, 0x45, 0x18, 0x83,
	0xe4, 0x0a, 0x21, 0x05, 0x54, 0x73, 0x30, 0x1d, 0x88, 0x6a, 0x50, 0x12, 0x1b, 0x38, 0x38, 0x8c,
	0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x06, 0x8e, 0x50, 0xed, 0x2d, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UIClient is the client API for UI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UIClient interface {
	RpcUpdateStationList(ctx context.Context, in *UIUpdateStationListRequest, opts ...grpc.CallOption) (*Empty, error)
	RpcUpdateSubscription(ctx context.Context, in *UIUpdateSubscriptionRequest, opts ...grpc.CallOption) (*Empty, error)
}

type uIClient struct {
	cc *grpc.ClientConn
}

func NewUIClient(cc *grpc.ClientConn) UIClient {
	return &uIClient{cc}
}

func (c *uIClient) RpcUpdateStationList(ctx context.Context, in *UIUpdateStationListRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/rpc.UI/RpcUpdateStationList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uIClient) RpcUpdateSubscription(ctx context.Context, in *UIUpdateSubscriptionRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/rpc.UI/RpcUpdateSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UIServer is the server API for UI service.
type UIServer interface {
	RpcUpdateStationList(context.Context, *UIUpdateStationListRequest) (*Empty, error)
	RpcUpdateSubscription(context.Context, *UIUpdateSubscriptionRequest) (*Empty, error)
}

// UnimplementedUIServer can be embedded to have forward compatible implementations.
type UnimplementedUIServer struct {
}

func (*UnimplementedUIServer) RpcUpdateStationList(ctx context.Context, req *UIUpdateStationListRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcUpdateStationList not implemented")
}
func (*UnimplementedUIServer) RpcUpdateSubscription(ctx context.Context, req *UIUpdateSubscriptionRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcUpdateSubscription not implemented")
}

func RegisterUIServer(s *grpc.Server, srv UIServer) {
	s.RegisterService(&_UI_serviceDesc, srv)
}

func _UI_RpcUpdateStationList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UIUpdateStationListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UIServer).RpcUpdateStationList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.UI/RpcUpdateStationList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UIServer).RpcUpdateStationList(ctx, req.(*UIUpdateStationListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UI_RpcUpdateSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UIUpdateSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UIServer).RpcUpdateSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.UI/RpcUpdateSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UIServer).RpcUpdateSubscription(ctx, req.(*UIUpdateSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.UI",
	HandlerType: (*UIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RpcUpdateStationList",
			Handler:    _UI_RpcUpdateStationList_Handler,
		},
		{
			MethodName: "RpcUpdateSubscription",
			Handler:    _UI_RpcUpdateSubscription_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ui.proto",
}
