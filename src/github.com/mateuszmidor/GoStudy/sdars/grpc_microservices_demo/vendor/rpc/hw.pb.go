// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hw.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Messages prefixed with Hw so they dont collide with other same named but maybe different content messages in package rpc
type HwTuneToStationRequest struct {
	StationID            uint32   `protobuf:"varint,1,opt,name=stationID,proto3" json:"stationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HwTuneToStationRequest) Reset()         { *m = HwTuneToStationRequest{} }
func (m *HwTuneToStationRequest) String() string { return proto.CompactTextString(m) }
func (*HwTuneToStationRequest) ProtoMessage()    {}
func (*HwTuneToStationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f22fcc6a44138406, []int{0}
}

func (m *HwTuneToStationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HwTuneToStationRequest.Unmarshal(m, b)
}
func (m *HwTuneToStationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HwTuneToStationRequest.Marshal(b, m, deterministic)
}
func (m *HwTuneToStationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HwTuneToStationRequest.Merge(m, src)
}
func (m *HwTuneToStationRequest) XXX_Size() int {
	return xxx_messageInfo_HwTuneToStationRequest.Size(m)
}
func (m *HwTuneToStationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HwTuneToStationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HwTuneToStationRequest proto.InternalMessageInfo

func (m *HwTuneToStationRequest) GetStationID() uint32 {
	if m != nil {
		return m.StationID
	}
	return 0
}

func init() {
	proto.RegisterType((*HwTuneToStationRequest)(nil), "rpc.HwTuneToStationRequest")
}

func init() { proto.RegisterFile("hw.proto", fileDescriptor_f22fcc6a44138406) }

var fileDescriptor_f22fcc6a44138406 = []byte{
	// 133 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xc8, 0x28, 0xd7, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x2a, 0x48, 0x96, 0xe2, 0x49, 0xce, 0xcf, 0xcd, 0xcd,
	0xcf, 0x83, 0x08, 0x29, 0x99, 0x71, 0x89, 0x79, 0x94, 0x87, 0x94, 0xe6, 0xa5, 0x86, 0xe4, 0x07,
	0x97, 0x24, 0x96, 0x64, 0xe6, 0xe7, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0xc9, 0x70,
	0x71, 0x16, 0x43, 0x44, 0x3c, 0x5d, 0x24, 0x18, 0x15, 0x18, 0x35, 0x78, 0x83, 0x10, 0x02, 0x46,
	0xce, 0x5c, 0x4c, 0x1e, 0xe5, 0x42, 0xb6, 0x5c, 0x02, 0x41, 0x05, 0xc9, 0x28, 0xda, 0x85, 0xa4,
	0xf5, 0x8a, 0x0a, 0x92, 0xf5, 0xb0, 0x1b, 0x2a, 0xc5, 0x05, 0x96, 0x74, 0xcd, 0x2d, 0x28, 0xa9,
	0x54, 0x62, 0x48, 0x62, 0x03, 0xbb, 0xc1, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x02, 0xbe, 0x87,
	0x4a, 0xa2, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HwClient is the client API for Hw service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HwClient interface {
	RpcTuneToStation(ctx context.Context, in *HwTuneToStationRequest, opts ...grpc.CallOption) (*Empty, error)
}

type hwClient struct {
	cc *grpc.ClientConn
}

func NewHwClient(cc *grpc.ClientConn) HwClient {
	return &hwClient{cc}
}

func (c *hwClient) RpcTuneToStation(ctx context.Context, in *HwTuneToStationRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/rpc.Hw/RpcTuneToStation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HwServer is the server API for Hw service.
type HwServer interface {
	RpcTuneToStation(context.Context, *HwTuneToStationRequest) (*Empty, error)
}

// UnimplementedHwServer can be embedded to have forward compatible implementations.
type UnimplementedHwServer struct {
}

func (*UnimplementedHwServer) RpcTuneToStation(ctx context.Context, req *HwTuneToStationRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RpcTuneToStation not implemented")
}

func RegisterHwServer(s *grpc.Server, srv HwServer) {
	s.RegisterService(&_Hw_serviceDesc, srv)
}

func _Hw_RpcTuneToStation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HwTuneToStationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HwServer).RpcTuneToStation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Hw/RpcTuneToStation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HwServer).RpcTuneToStation(ctx, req.(*HwTuneToStationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hw_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Hw",
	HandlerType: (*HwServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RpcTuneToStation",
			Handler:    _Hw_RpcTuneToStation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hw.proto",
}
