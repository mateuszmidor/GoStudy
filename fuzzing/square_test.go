package main

import (
	"testing"
)

// go test -fuzz=Fuzz square_test.go -fuzztime 10s
func FuzzSquare(f *testing.F) {
	testcases := []int16{-10000, 0, 10000}
	for _, tc := range testcases {
		f.Add(tc) // Use f.Add to provide a seed corpus
	}
	f.Fuzz(func(t *testing.T, input int16) { // "input" is auto-generated by the fuzzing mechanism
		actual := Square(input)
		expected := int32(input) * int32(input)
		if actual != expected {
			t.Errorf("input: %d, expected square: %d, got square: %d", input, expected, actual)
		}
	})
}

func Square(i int16) int32 {
	return int32(i * i) // ERROR here: should be int32(i) * int32(i)
}

func FixedSquare(i int16) int32 {
	return int32(i) * int32(i) // CORRECT
}
