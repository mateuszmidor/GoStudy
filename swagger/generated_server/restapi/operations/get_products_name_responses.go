// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/mateuszmidor/GoStudy/swagger/generated_server/models"
)

// GetProductsNameOKCode is the HTTP code returned for type GetProductsNameOK
const GetProductsNameOKCode int = 200

/*GetProductsNameOK Get products success

swagger:response getProductsNameOK
*/
type GetProductsNameOK struct {

	/*
	  In: Body
	*/
	Payload *models.Product `json:"body,omitempty"`
}

// NewGetProductsNameOK creates GetProductsNameOK with default headers values
func NewGetProductsNameOK() *GetProductsNameOK {

	return &GetProductsNameOK{}
}

// WithPayload adds the payload to the get products name o k response
func (o *GetProductsNameOK) WithPayload(payload *models.Product) *GetProductsNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get products name o k response
func (o *GetProductsNameOK) SetPayload(payload *models.Product) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProductsNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetProductsNameNotFoundCode is the HTTP code returned for type GetProductsNameNotFound
const GetProductsNameNotFoundCode int = 404

/*GetProductsNameNotFound No such product in the fridge

swagger:response getProductsNameNotFound
*/
type GetProductsNameNotFound struct {
}

// NewGetProductsNameNotFound creates GetProductsNameNotFound with default headers values
func NewGetProductsNameNotFound() *GetProductsNameNotFound {

	return &GetProductsNameNotFound{}
}

// WriteResponse to the client
func (o *GetProductsNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
