// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PutProductsNameReader is a Reader for the PutProductsName structure.
type PutProductsNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutProductsNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutProductsNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewPutProductsNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPutProductsNameNoContent creates a PutProductsNameNoContent with default headers values
func NewPutProductsNameNoContent() *PutProductsNameNoContent {
	return &PutProductsNameNoContent{}
}

/* PutProductsNameNoContent describes a response with status code 204, with default header values.

Product successfuly withdrawn from the fridge
*/
type PutProductsNameNoContent struct {
}

func (o *PutProductsNameNoContent) Error() string {
	return fmt.Sprintf("[PUT /products/{name}][%d] putProductsNameNoContent ", 204)
}

func (o *PutProductsNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutProductsNameNotFound creates a PutProductsNameNotFound with default headers values
func NewPutProductsNameNotFound() *PutProductsNameNotFound {
	return &PutProductsNameNotFound{}
}

/* PutProductsNameNotFound describes a response with status code 404, with default header values.

No such product in the fridge
*/
type PutProductsNameNotFound struct {
}

func (o *PutProductsNameNotFound) Error() string {
	return fmt.Sprintf("[PUT /products/{name}][%d] putProductsNameNotFound ", 404)
}

func (o *PutProductsNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PutProductsNameBody put products name body
swagger:model PutProductsNameBody
*/
type PutProductsNameBody struct {

	// quantity
	// Example: 1
	// Minimum: 0
	Quantity *float64 `json:"quantity,omitempty"`
}

// Validate validates this put products name body
func (o *PutProductsNameBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateQuantity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutProductsNameBody) validateQuantity(formats strfmt.Registry) error {
	if swag.IsZero(o.Quantity) { // not required
		return nil
	}

	if err := validate.Minimum("product"+"."+"quantity", "body", *o.Quantity, 0, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this put products name body based on context it is used
func (o *PutProductsNameBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PutProductsNameBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutProductsNameBody) UnmarshalBinary(b []byte) error {
	var res PutProductsNameBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
